#version 410 core

uniform float fGlobalTime; // in seconds
uniform vec2 v2Resolution; // viewport resolution (in pixels)
uniform float fFrameTime; // duration of the last frame, in seconds

uniform sampler1D texFFT; // towards 0.0 is bass / lower freq, towards 1.0 is higher / treble freq
uniform sampler1D texFFTSmoothed; // this one has longer falloff and less harsh transients
uniform sampler1D texFFTIntegrated; // this is continually increasing
uniform sampler2D texPreviousFrame; // screenshot of the previous frame

in vec2 out_texcoord;
layout(location = 0) out vec4 out_color; // out_color must be written in order to see anything


void main(void)
{
	vec2 uv = out_texcoord;
	
  uv -=0.5;
  uv /= vec2(v2Resolution.y/v2Resolution.x,1);
  
  vec2 uv2 = uv;
  vec2 uv3=uv;
  
  uv.x +=sin(fGlobalTime)*0.2;
  uv.y +=cos(fGlobalTime)*0.2;
  float sphere = length(uv)-0.15;
  
  
  float sphere3 = length(uv3)-0.1;
  
  uv3.x+=sin(fGlobalTime)*0.2;
  
  if (sphere <0.0){
    out_color = vec4(abs((sin(fGlobalTime)))+0.2,abs((sin(fGlobalTime))),abs((cos(fGlobalTime))),1);
  }
  else{
    out_color = vec4(0,0,0,1);
  }
    }